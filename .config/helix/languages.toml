[language-server.angular]
command = "ngserver"
scope = "source.angular"
roots = ["angular.json"]
args = [ "--stdio", "--tsProbeLocations", "$(yarn global dir)/node_modules", "--ngProbeLocations", "$(yarn global dir)/node_modules" ]
file-types = ["ts", "html"]

[language-server.eslint]
command = "vscode-eslint-language-server"
args = ["--stdio"]

[language-server.eslint.config]
format = true
nodePath = ""
onIgnoredFiles = "off"
packageManager = "yarn"
quiet = false
rulesCustomizations = []
run = "onType"
useESLintClass = false
validate = "on"
codeAction = { disableRuleComment = { enable = true, location = "separateLine" }, showDocumentation = { enable = true } }
codeActionOnSave = { mode = "all" }
experimental = { }
problems = { shortenToSingleLine = false }
workingDirectory = { mode = "location" }

[[language]]
name = "html"
auto-format = true
language-servers = ["vscode-html-language-server", "angular"]
formatter = { command = 'prettier', args = ["--parser", "html"] }

[[language]]
name = "typescript"
auto-format = true
language-servers = ["typescript-language-server", "eslint"]
formatter = { command = 'prettier', args = ["--parser", "typescript"] }

[[language]]
name = "json"
formatter = { command = 'prettier', args = ["--parser", "json"] }

[[language]]
name = "css"
formatter = { command = 'prettier', args = ["--parser", "css"] }

[[language]]
name = "javascript"
formatter = { command = 'prettier', args = ["--parser", "typescript"] }
language-servers = ["typescript-language-server"]
auto-format = true

[[language]]
name = "vue"
formatter = { command = 'prettier', args = ["--parser", "vue"] }
auto-format = true

